group = 'dev.mkennedy'
version = '0.0.2'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.jsoup:jsoup:1.13.1'
    runtimeOnly 'org.postgresql:postgresql:42.2.12'
    runtimeOnly project(":frontend")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.12'
}

bootRun {
    if (project.hasProperty("springProfile")) {
        bootRun.systemProperty 'spring.profiles.active', "${springProfile}"
    } else {
        bootRun.systemProperty 'spring.profiles.active', 'data,dev'
    }
}

bootJar {
    archiveFileName = 'blog-server.jar'
}

test {
	useJUnitPlatform()
}

task unpackJar(type: Copy) {
    from zipTree("$buildDir/libs/blog-server.jar")
    into "$buildDir/dependency"
}

task buildForDocker {
    bootJar.mustRunAfter clean
    unpackJar.mustRunAfter bootJar
    test.mustRunAfter clean

    dependsOn("clean")
    dependsOn("test")
    dependsOn("bootJar")
    dependsOn("unpackJar")
    group = "Build"
    description = "Builds artifacts for docker image"
}
